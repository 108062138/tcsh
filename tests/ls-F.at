AT_BANNER([ls-F built-in command])

dnl
dnl TCSH_LS_F(EXPECTFILE, [VARS], [ENVS])
dnl	Check 'cd DIR && ls-F' and 'ls-F DIR'.
dnl	For 'cd DIR && ls-F', stdout should match EXPECTFILE.
dnl	For 'ls-F DIR', first line should be 'DIR:' and
dnl	the rest should match EXPECTFILE.
dnl	If VARS isn't empty, run in tcsh before ls-F.
dnl	If ENVS isn't empty, use that as the environment to tcsh.
dnl
m4_define([TCSH_LS_F], [dnl
m4_if(m4_eval($# < 1 || $# > 3), [1],
    [m4_fatal([usage: $0(OUTFILE, VARS, ENVS)])])dnl
AT_CHECK([$3 tcsh -f -c '$2;cd DIR && ls-F'], [0], [stdout-nolog])
TCSH_DIFF([$1], [stdout])
AT_CHECK([$3 tcsh -f -c '$2;ls-F DIR'], [0], [stdout-nolog])
AT_CHECK([sed -e '1!b' -e '/^DIR:/d' stdout], [0], [stdout-nolog])
AT_CHECK([diff "$1" stdout])
])


dnl
dnl	ls-F
dnl

dnl
dnl Note that the test groups don't test multiple columns
dnl because the terminal doesn't get setup by default with -c.
dnl

AT_SETUP([ls-F])
AT_KEYWORDS([commands])

AT_CHECK([create_ls_DIR])

unset CLICOLOR_FORCE
unset LSCOLORS
unset LS_COLORS

dnl
dnl ls-F with default behavior
dnl
TCSH_LS_F([${tests_dir}/ls-F-default.out])

dnl
dnl listlinks
dnl
dnl Changes from ls-F-default.out:
dnl	ldir>
dnl	lldir>
dnl	llorphan&
dnl	lorphan&
dnl
TCSH_LS_F([${tests_dir}/ls-F-listlinks.out], [set listlinks])

dnl
dnl listflags=x
dnl
dnl Note: no changes from ls-F-default.out when in in 1 column mode
dnl
TCSH_LS_F([${tests_dir}/ls-F-default.out], [set listflags=x])

dnl
dnl listflags=A
dnl
dnl Changes from ls-F-default.out:
dnl	.hidden
dnl
TCSH_LS_F([${tests_dir}/ls-F-listflags-A.out], [set listflags=A])

dnl
dnl listflags=xa
dnl
dnl Changes from ls-F-default.out:
dnl	../
dnl	./
dnl	.hidden
dnl
TCSH_LS_F([${tests_dir}/ls-F-listflags-xa.out], [set listflags=xa])

AT_CLEANUP()


dnl
dnl	ls-F color CLICOLOR_FORCE
dnl

AT_SETUP([ls-F color CLICOLOR_FORCE])
AT_KEYWORDS([commands])

AT_CHECK([create_ls_DIR])

CLICOLOR_FORCE=
export CLICOLOR_FORCE
unset LSCOLORS
unset LS_COLORS

dnl
dnl Default colors, listflags=A, listlinks
dnl
TCSH_LS_F([${tests_dir}/ls-F-color-default.out],
    [set color listflags=A listlinks])

dnl
dnl unsetenv CLICOLOR_FORCE in tcsh
dnl This should be same as ls-F-default.out, i.e., without color.
dnl
TCSH_LS_F([${tests_dir}/ls-F-default.out],
    [set color; unsetenv CLICOLOR_FORCE])

AT_CLEANUP()


dnl
dnl	ls-F color LSCOLORS
dnl

AT_SETUP([ls-F color LSCOLORS])
AT_KEYWORDS([commands])

AT_CHECK([create_ls_DIR])

CLICOLOR_FORCE=
export CLICOLOR_FORCE
unset LSCOLORS
unset LS_COLORS

dnl
dnl LSCOLORS: dim foreground colors,
dnl except bright colors for set*id and sticky which are
dnl not currently supported and not expected in the output.
dnl listflags=A, listlinks
dnl
TCSH_LS_F([${tests_dir}/ls-F-LSCOLORS-dim.out],
    [set color listflags=A listlinks],
    [LSCOLORS=bxcxdxexfxgxhxAxBxCxDx])

dnl
dnl As ls-F-LSCOLORS-dim.out above, but setenv LSCOLORS in tcsh.
dnl
TCSH_LS_F([${tests_dir}/ls-F-LSCOLORS-dim.out],
    [set color listflags=A listlinks; setenv LSCOLORS "bxcxdxexfxgxhxAxBxCxDx"])

dnl
dnl LSCOLORS: bright foreground colors (01 present in color string),
dnl except dim colors for set*id and sticky which are
dnl not currently supported and not expected in the output.
dnl listflags=A, listlinks
dnl
dnl Changes from ls-F-LSCOLORS-dim.out
dnl     All the colors are bright.
dnl
TCSH_LS_F([${tests_dir}/ls-F-LSCOLORS-bright.out],
    [set color listflags=A listlinks],
    [LSCOLORS=BxCxDxExFxGxHxaxbxcxdx])

dnl
dnl As ls-F-LSCOLORS-bright.out above, but setenv LSCOLORS in tcsh.
dnl
TCSH_LS_F([${tests_dir}/ls-F-LSCOLORS-bright.out],
    [setenv LSCOLORS BxCxDxExFxGxHxaxbxcxdx; set color listflags=A listlinks])

dnl
dnl LSCOLORS without set listlinks.
dnl
dnl Changes from ls-F-LSCOLORS-bright.out:
dnl     ldir@           green not red
dnl     lldir           green not red
dnl     llorphan@       green not white
dnl     lorphan@        green not white
dnl
TCSH_LS_F([${tests_dir}/ls-F-LSCOLORS-nolinks.out],
    [set color listflags=A],
    [LSCOLORS=BxCxDxExFxGxHxaxbxcxdx])

dnl
dnl As ls-F-LSCOLORS-bright.out above, with LS_COLORS=ln=target,
dnl then setenv LSCOLORS override in tcsh.
dnl This should disable ln=target with the LSCOLORS override,
dnl and be same as ls-F-LSCOLORS-bright.out.
dnl
TCSH_LS_F([${tests_dir}/ls-F-LSCOLORS-bright.out],
    [setenv LSCOLORS BxCxDxExFxGxHxaxbxcxdx; set color listflags=A listlinks],
    [LS_COLORS=ln=target])

AT_CLEANUP()


dnl
dnl	ls-F color LS_COLORS
dnl

AT_SETUP([ls-F color LS_COLORS])
AT_KEYWORDS([commands])

AT_CHECK([create_ls_DIR])

CLICOLOR_FORCE=
export CLICOLOR_FORCE
unset LSCOLORS
unset LS_COLORS

dnl LS_COLORS value with all variables set to "vv={VV}" and
dnl extensions .1 .12 .123 .1234 set.
dnl
m4_pushdef([TCSH_TEXT_LS_COLORS], [di={DI}:ln={LN}:or={OR}:pi={PI}:so={SO}:do={DO}:bd={BD}:cd={CD}:ex={EX}:fi={FI}:no={NO}:mi={MI}:lc={LC}:rc={RC}:ec={EC}:su={SU}:sg={SG}:tw={TW}:ow={OW}:st={ST}:rs={RS}:hl={HL}:mh={MH}:ca={CA}:*.1={DOT1}:*.12={DOT12}:*.123={DOT123}:*.1234={DOT1234}])

dnl
dnl LS_COLORS as TCSH_TEXT_LS_COLORS.
dnl listflags=A, listlinks
dnl
TCSH_LS_F([${tests_dir}/ls-F-LS_COLORS-all.out],
    [set color listflags=A listlinks],
    [LS_COLORS="TCSH_TEXT_LS_COLORS"])

dnl
dnl LS_COLORS as TCSH_TEXT_LS_COLORS without set listlinks.
dnl
dnl Changes from ls-F-LS_COLORS-all.out:
dnl     {LC}{LN}{RC}ldir{EC}@
dnl     {LC}{LN}{RC}lldir{EC}@
dnl     {LC}{LN}{RC}llorphan{EC}@
dnl     {LC}{LN}{RC}lorphan{EC}@
dnl
TCSH_LS_F([${tests_dir}/ls-F-LS_COLORS-nofollow.out],
    [set color listflags=A],
    [LS_COLORS="TCSH_TEXT_LS_COLORS"])

dnl
dnl LS_COLORS as TCSH_TEXT_LS_COLORS:ln=target
dnl listflags=A, listlinks
dnl
dnl Changes from ls-F-LS_COLORS-all.out: files have their
dnl color based on the link target but retain the @ suffix.
dnl
TCSH_LS_F([${tests_dir}/ls-F-LS_COLORS-ln-target.out],
    [set color listflags=A listlinks],
    [LS_COLORS="TCSH_TEXT_LS_COLORS:ln=target"])

dnl
dnl LS_COLORS with just ln=target.
dnl
TCSH_LS_F([${tests_dir}/ls-F-color-ln-target.out],
    [set color listflags=A listlinks],
    [LS_COLORS="ln=target"])

dnl
dnl LS_COLORS as TCSH_TEXT_LS_COLORS:ln=target, then setenv without ln=target.
dnl then setenv LS_COLORS ln=target:TCSH_TEXT_LS_COLORS
dnl listflags=A, listlinks
dnl
dnl This should disable ln=target, and be same as ls-F-LS_COLORS-all.out.
dnl
TCSH_LS_F([${tests_dir}/ls-F-LS_COLORS-all.out],
    [set color listflags=A listlinks;setenv LS_COLORS "ln=target:TCSH_TEXT_LS_COLORS"],
    [LS_COLORS="TCSH_TEXT_LS_COLORS:ln=target"])

dnl
dnl LS_COLORS with just ln=target, then unsetenv LS_COLORS.
dnl This should disable ln=target, and be same as ls-F-color-default.out.
dnl
TCSH_LS_F([${tests_dir}/ls-F-color-default.out],
    [unsetenv LS_COLORS; set color listflags=A listlinks],
    [LS_COLORS="ln=target"])

m4_popdef([TCSH_TEXT_LS_COLORS])

AT_CLEANUP()
